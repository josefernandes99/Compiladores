-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Prog                              (0)
	Prog -> GDefn                                      (1)
	Prog -> GDefn Prog                                 (2)
	GDefn -> Type id "(" ")" "{" "}"                   (3)
	GDefn -> Type id "(" ")" "{" Stmts "}"             (4)
	GDefn -> Type id "(" GDefns ")" "{" "}"            (5)
	GDefn -> Type id "(" GDefns ")" "{" Stmts "}"      (6)
	GDefns -> Type id                                  (7)
	GDefns -> Type id "," GDefns                       (8)
	Stmt -> Simple ";"                                 (9)
	Stmt -> if "(" Exp ")" Stmt else Stmt              (10)
	Stmt -> if "(" Exp ")" "{" Stmts "}" else Stmt     (11)
	Stmt -> if "(" Exp ")" Stmt else "{" Stmts "}"     (12)
	Stmt -> if "(" Exp ")" "{" Stmts "}" else "{" Stmts "}"   (13)
	Stmt -> if "(" Exp ")" Stmt                        (14)
	Stmt -> if "(" Exp ")" "{" Stmts "}"               (15)
	Stmt -> while "(" Exp ")" Stmt                     (16)
	Stmt -> while "(" Exp ")" "{" Stmts "}"            (17)
	Stmt -> for "(" Simple ";" Exp ";" Simple ")" Stmt   (18)
	Stmt -> for "(" Simple ";" Exp ";" Simple ")" "{" Stmts "}"   (19)
	Stmt -> return Exp ";"                             (20)
	Stmt -> print_int "(" Exp ")" ";"                  (21)
	Stmts -> Stmt                                      (22)
	Stmts -> Stmt Stmts                                (23)
	Simple -> id "=" Exp                               (24)
	Simple -> id "++"                                  (25)
	Simple -> id "--"                                  (26)
	Simple -> Type Ids                                 (27)
	Ids -> id                                          (28)
	Ids -> id "," Ids                                  (29)
	Ids -> id "=" Exp                                  (30)
	Ids -> id "=" Exp "," Ids                          (31)
	Type -> int                                        (32)
	Type -> bool                                       (33)
	Exp -> num                                         (34)
	Exp -> true                                        (35)
	Exp -> false                                       (36)
	Exp -> Exp "+" Exp                                 (37)
	Exp -> Exp "-" Exp                                 (38)
	Exp -> Exp "/" Exp                                 (39)
	Exp -> Exp "*" Exp                                 (40)
	Exp -> Exp "%" Exp                                 (41)
	Exp -> Exp "==" Exp                                (42)
	Exp -> Exp ">" Exp                                 (43)
	Exp -> Exp "<" Exp                                 (44)
	Exp -> Exp ">=" Exp                                (45)
	Exp -> Exp "<=" Exp                                (46)
	Exp -> Exp "!=" Exp                                (47)
	Exp -> Exp "&&" Exp                                (48)
	Exp -> "!" Exp                                     (49)
	Exp -> id                                          (50)
	Exp -> scan_int "(" ")"                            (51)
	Exp -> id "(" Exp ")"                              (52)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	bool           { BOOL }
	true           { TRUE }
	false          { FALSE }
	int            { INT }
	if             { IF }
	for            { FOR }
	return         { RETURN }
	else           { ELSE }
	print_int      { PRINTINT }
	scan_int       { SCANINT }
	id             { ID $$ }
	num            { NUM $$ }
	","            { COMMA }
	";"            { SEMI }
	"++"           { INCR }
	"+"            { SUM }
	"--"           { DECR }
	"-"            { SUB }
	"*"            { MULT }
	"/"            { DIV }
	"%"            { MOD }
	"=="           { EQUAL }
	"!="           { DIFF }
	">"            { BIGGER }
	"<"            { LESS }
	">="           { BIGGEROREQ }
	"<="           { LESSOREQ }
	"="            { ASSIGN }
	"{"            { OPENBRACKETS }
	"}"            { CLOSEBRACKETS }
	"("            { OPENPARENTHESIS }
	")"            { CLOSEPARENTHESIS }
	while          { WHILE }
	"!"            { NOT }
	"&&"           { AND }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Prog            rules 1, 2
	GDefn           rules 3, 4, 5, 6
	GDefns          rules 7, 8
	Stmt            rules 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
	Stmts           rules 22, 23
	Simple          rules 24, 25, 26, 27
	Ids             rules 28, 29, 30, 31
	Type            rules 32, 33
	Exp             rules 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	bool           shift, and enter state 4
	int            shift, and enter state 5

	Prog           goto state 6
	GDefn          goto state 7
	Type           goto state 3

State 1


	bool           shift, and enter state 4
	int            shift, and enter state 5

	GDefn          goto state 2
	Type           goto state 3

State 2

	Prog -> GDefn .                                     (rule 1)



State 3

	GDefn -> Type . id "(" ")" "{" "}"                  (rule 3)
	GDefn -> Type . id "(" ")" "{" Stmts "}"            (rule 4)
	GDefn -> Type . id "(" GDefns ")" "{" "}"           (rule 5)
	GDefn -> Type . id "(" GDefns ")" "{" Stmts "}"     (rule 6)

	id             shift, and enter state 9


State 4

	Type -> bool .                                      (rule 33)

	id             reduce using rule 33


State 5

	Type -> int .                                       (rule 32)

	id             reduce using rule 32


State 6

	%start_parser -> Prog .                             (rule 0)

	%eof           accept


State 7

	Prog -> GDefn .                                     (rule 1)
	Prog -> GDefn . Prog                                (rule 2)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	%eof           reduce using rule 1

	Prog           goto state 8
	GDefn          goto state 7
	Type           goto state 3

State 8

	Prog -> GDefn Prog .                                (rule 2)

	%eof           reduce using rule 2


State 9

	GDefn -> Type id . "(" ")" "{" "}"                  (rule 3)
	GDefn -> Type id . "(" ")" "{" Stmts "}"            (rule 4)
	GDefn -> Type id . "(" GDefns ")" "{" "}"           (rule 5)
	GDefn -> Type id . "(" GDefns ")" "{" Stmts "}"     (rule 6)

	"("            shift, and enter state 10


State 10

	GDefn -> Type id "(" . ")" "{" "}"                  (rule 3)
	GDefn -> Type id "(" . ")" "{" Stmts "}"            (rule 4)
	GDefn -> Type id "(" . GDefns ")" "{" "}"           (rule 5)
	GDefn -> Type id "(" . GDefns ")" "{" Stmts "}"     (rule 6)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	")"            shift, and enter state 13

	GDefns         goto state 11
	Type           goto state 12

State 11

	GDefn -> Type id "(" GDefns . ")" "{" "}"           (rule 5)
	GDefn -> Type id "(" GDefns . ")" "{" Stmts "}"     (rule 6)

	")"            shift, and enter state 16


State 12

	GDefns -> Type . id                                 (rule 7)
	GDefns -> Type . id "," GDefns                      (rule 8)

	id             shift, and enter state 15


State 13

	GDefn -> Type id "(" ")" . "{" "}"                  (rule 3)
	GDefn -> Type id "(" ")" . "{" Stmts "}"            (rule 4)

	"{"            shift, and enter state 14


State 14

	GDefn -> Type id "(" ")" "{" . "}"                  (rule 3)
	GDefn -> Type id "(" ")" "{" . Stmts "}"            (rule 4)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	if             shift, and enter state 23
	for            shift, and enter state 24
	return         shift, and enter state 25
	print_int      shift, and enter state 26
	id             shift, and enter state 27
	"}"            shift, and enter state 28
	while          shift, and enter state 29

	Stmt           goto state 19
	Stmts          goto state 20
	Simple         goto state 21
	Type           goto state 22

State 15

	GDefns -> Type id .                                 (rule 7)
	GDefns -> Type id . "," GDefns                      (rule 8)

	","            shift, and enter state 18
	")"            reduce using rule 7


State 16

	GDefn -> Type id "(" GDefns ")" . "{" "}"           (rule 5)
	GDefn -> Type id "(" GDefns ")" . "{" Stmts "}"     (rule 6)

	"{"            shift, and enter state 17


State 17

	GDefn -> Type id "(" GDefns ")" "{" . "}"           (rule 5)
	GDefn -> Type id "(" GDefns ")" "{" . Stmts "}"     (rule 6)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	if             shift, and enter state 23
	for            shift, and enter state 24
	return         shift, and enter state 25
	print_int      shift, and enter state 26
	id             shift, and enter state 27
	"}"            shift, and enter state 51
	while          shift, and enter state 29

	Stmt           goto state 19
	Stmts          goto state 50
	Simple         goto state 21
	Type           goto state 22

State 18

	GDefns -> Type id "," . GDefns                      (rule 8)

	bool           shift, and enter state 4
	int            shift, and enter state 5

	GDefns         goto state 49
	Type           goto state 12

State 19

	Stmts -> Stmt .                                     (rule 22)
	Stmts -> Stmt . Stmts                               (rule 23)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	if             shift, and enter state 23
	for            shift, and enter state 24
	return         shift, and enter state 25
	print_int      shift, and enter state 26
	id             shift, and enter state 27
	"}"            reduce using rule 22
	while          shift, and enter state 29

	Stmt           goto state 19
	Stmts          goto state 48
	Simple         goto state 21
	Type           goto state 22

State 20

	GDefn -> Type id "(" ")" "{" Stmts . "}"            (rule 4)

	"}"            shift, and enter state 47


State 21

	Stmt -> Simple . ";"                                (rule 9)

	";"            shift, and enter state 46


State 22

	Simple -> Type . Ids                                (rule 27)

	id             shift, and enter state 45

	Ids            goto state 44

State 23

	Stmt -> if . "(" Exp ")" Stmt else Stmt             (rule 10)
	Stmt -> if . "(" Exp ")" "{" Stmts "}" else Stmt    (rule 11)
	Stmt -> if . "(" Exp ")" Stmt else "{" Stmts "}"    (rule 12)
	Stmt -> if . "(" Exp ")" "{" Stmts "}" else "{" Stmts "}"    (rule 13)
	Stmt -> if . "(" Exp ")" Stmt                       (rule 14)
	Stmt -> if . "(" Exp ")" "{" Stmts "}"              (rule 15)

	"("            shift, and enter state 43


State 24

	Stmt -> for . "(" Simple ";" Exp ";" Simple ")" Stmt    (rule 18)
	Stmt -> for . "(" Simple ";" Exp ";" Simple ")" "{" Stmts "}"    (rule 19)

	"("            shift, and enter state 42


State 25

	Stmt -> return . Exp ";"                            (rule 20)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 35

State 26

	Stmt -> print_int . "(" Exp ")" ";"                 (rule 21)

	"("            shift, and enter state 34


State 27

	Simple -> id . "=" Exp                              (rule 24)
	Simple -> id . "++"                                 (rule 25)
	Simple -> id . "--"                                 (rule 26)

	"++"           shift, and enter state 31
	"--"           shift, and enter state 32
	"="            shift, and enter state 33


State 28

	GDefn -> Type id "(" ")" "{" "}" .                  (rule 3)

	bool           reduce using rule 3
	int            reduce using rule 3
	%eof           reduce using rule 3


State 29

	Stmt -> while . "(" Exp ")" Stmt                    (rule 16)
	Stmt -> while . "(" Exp ")" "{" Stmts "}"           (rule 17)

	"("            shift, and enter state 30


State 30

	Stmt -> while "(" . Exp ")" Stmt                    (rule 16)
	Stmt -> while "(" . Exp ")" "{" Stmts "}"           (rule 17)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 75

State 31

	Simple -> id "++" .                                 (rule 25)

	";"            reduce using rule 25
	")"            reduce using rule 25


State 32

	Simple -> id "--" .                                 (rule 26)

	";"            reduce using rule 26
	")"            reduce using rule 26


State 33

	Simple -> id "=" . Exp                              (rule 24)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 74

State 34

	Stmt -> print_int "(" . Exp ")" ";"                 (rule 21)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 73

State 35

	Stmt -> return Exp . ";"                            (rule 20)
	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	";"            shift, and enter state 60
	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           shift, and enter state 66
	"!="           shift, and enter state 67
	">"            shift, and enter state 68
	"<"            shift, and enter state 69
	">="           shift, and enter state 70
	"<="           shift, and enter state 71
	"&&"           shift, and enter state 72


State 36

	Exp -> true .                                       (rule 35)

	","            reduce using rule 35
	";"            reduce using rule 35
	"+"            reduce using rule 35
	"-"            reduce using rule 35
	"*"            reduce using rule 35
	"/"            reduce using rule 35
	"%"            reduce using rule 35
	"=="           reduce using rule 35
	"!="           reduce using rule 35
	">"            reduce using rule 35
	"<"            reduce using rule 35
	">="           reduce using rule 35
	"<="           reduce using rule 35
	")"            reduce using rule 35
	"&&"           reduce using rule 35


State 37

	Exp -> false .                                      (rule 36)

	","            reduce using rule 36
	";"            reduce using rule 36
	"+"            reduce using rule 36
	"-"            reduce using rule 36
	"*"            reduce using rule 36
	"/"            reduce using rule 36
	"%"            reduce using rule 36
	"=="           reduce using rule 36
	"!="           reduce using rule 36
	">"            reduce using rule 36
	"<"            reduce using rule 36
	">="           reduce using rule 36
	"<="           reduce using rule 36
	")"            reduce using rule 36
	"&&"           reduce using rule 36


State 38

	Exp -> scan_int . "(" ")"                           (rule 51)

	"("            shift, and enter state 59


State 39

	Exp -> id .                                         (rule 50)
	Exp -> id . "(" Exp ")"                             (rule 52)

	","            reduce using rule 50
	";"            reduce using rule 50
	"+"            reduce using rule 50
	"-"            reduce using rule 50
	"*"            reduce using rule 50
	"/"            reduce using rule 50
	"%"            reduce using rule 50
	"=="           reduce using rule 50
	"!="           reduce using rule 50
	">"            reduce using rule 50
	"<"            reduce using rule 50
	">="           reduce using rule 50
	"<="           reduce using rule 50
	"("            shift, and enter state 58
	")"            reduce using rule 50
	"&&"           reduce using rule 50


State 40

	Exp -> num .                                        (rule 34)

	","            reduce using rule 34
	";"            reduce using rule 34
	"+"            reduce using rule 34
	"-"            reduce using rule 34
	"*"            reduce using rule 34
	"/"            reduce using rule 34
	"%"            reduce using rule 34
	"=="           reduce using rule 34
	"!="           reduce using rule 34
	">"            reduce using rule 34
	"<"            reduce using rule 34
	">="           reduce using rule 34
	"<="           reduce using rule 34
	")"            reduce using rule 34
	"&&"           reduce using rule 34


State 41

	Exp -> "!" . Exp                                    (rule 49)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 57

State 42

	Stmt -> for "(" . Simple ";" Exp ";" Simple ")" Stmt    (rule 18)
	Stmt -> for "(" . Simple ";" Exp ";" Simple ")" "{" Stmts "}"    (rule 19)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	id             shift, and enter state 27

	Simple         goto state 56
	Type           goto state 22

State 43

	Stmt -> if "(" . Exp ")" Stmt else Stmt             (rule 10)
	Stmt -> if "(" . Exp ")" "{" Stmts "}" else Stmt    (rule 11)
	Stmt -> if "(" . Exp ")" Stmt else "{" Stmts "}"    (rule 12)
	Stmt -> if "(" . Exp ")" "{" Stmts "}" else "{" Stmts "}"    (rule 13)
	Stmt -> if "(" . Exp ")" Stmt                       (rule 14)
	Stmt -> if "(" . Exp ")" "{" Stmts "}"              (rule 15)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 55

State 44

	Simple -> Type Ids .                                (rule 27)

	";"            reduce using rule 27
	")"            reduce using rule 27


State 45

	Ids -> id .                                         (rule 28)
	Ids -> id . "," Ids                                 (rule 29)
	Ids -> id . "=" Exp                                 (rule 30)
	Ids -> id . "=" Exp "," Ids                         (rule 31)

	","            shift, and enter state 53
	";"            reduce using rule 28
	"="            shift, and enter state 54
	")"            reduce using rule 28


State 46

	Stmt -> Simple ";" .                                (rule 9)

	bool           reduce using rule 9
	int            reduce using rule 9
	if             reduce using rule 9
	for            reduce using rule 9
	return         reduce using rule 9
	else           reduce using rule 9
	print_int      reduce using rule 9
	id             reduce using rule 9
	"}"            reduce using rule 9
	while          reduce using rule 9


State 47

	GDefn -> Type id "(" ")" "{" Stmts "}" .            (rule 4)

	bool           reduce using rule 4
	int            reduce using rule 4
	%eof           reduce using rule 4


State 48

	Stmts -> Stmt Stmts .                               (rule 23)

	"}"            reduce using rule 23


State 49

	GDefns -> Type id "," GDefns .                      (rule 8)

	")"            reduce using rule 8


State 50

	GDefn -> Type id "(" GDefns ")" "{" Stmts . "}"     (rule 6)

	"}"            shift, and enter state 52


State 51

	GDefn -> Type id "(" GDefns ")" "{" "}" .           (rule 5)

	bool           reduce using rule 5
	int            reduce using rule 5
	%eof           reduce using rule 5


State 52

	GDefn -> Type id "(" GDefns ")" "{" Stmts "}" .     (rule 6)

	bool           reduce using rule 6
	int            reduce using rule 6
	%eof           reduce using rule 6


State 53

	Ids -> id "," . Ids                                 (rule 29)

	id             shift, and enter state 45

	Ids            goto state 95

State 54

	Ids -> id "=" . Exp                                 (rule 30)
	Ids -> id "=" . Exp "," Ids                         (rule 31)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 94

State 55

	Stmt -> if "(" Exp . ")" Stmt else Stmt             (rule 10)
	Stmt -> if "(" Exp . ")" "{" Stmts "}" else Stmt    (rule 11)
	Stmt -> if "(" Exp . ")" Stmt else "{" Stmts "}"    (rule 12)
	Stmt -> if "(" Exp . ")" "{" Stmts "}" else "{" Stmts "}"    (rule 13)
	Stmt -> if "(" Exp . ")" Stmt                       (rule 14)
	Stmt -> if "(" Exp . ")" "{" Stmts "}"              (rule 15)
	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           shift, and enter state 66
	"!="           shift, and enter state 67
	">"            shift, and enter state 68
	"<"            shift, and enter state 69
	">="           shift, and enter state 70
	"<="           shift, and enter state 71
	")"            shift, and enter state 93
	"&&"           shift, and enter state 72


State 56

	Stmt -> for "(" Simple . ";" Exp ";" Simple ")" Stmt    (rule 18)
	Stmt -> for "(" Simple . ";" Exp ";" Simple ")" "{" Stmts "}"    (rule 19)

	";"            shift, and enter state 92


State 57

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)
	Exp -> "!" Exp .                                    (rule 49)

	","            reduce using rule 49
	";"            reduce using rule 49
	"+"            reduce using rule 49
	"-"            reduce using rule 49
	"*"            reduce using rule 49
	"/"            reduce using rule 49
	"%"            reduce using rule 49
	"=="           reduce using rule 49
	"!="           reduce using rule 49
	">"            reduce using rule 49
	"<"            reduce using rule 49
	">="           reduce using rule 49
	"<="           reduce using rule 49
	")"            reduce using rule 49
	"&&"           reduce using rule 49


State 58

	Exp -> id "(" . Exp ")"                             (rule 52)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 91

State 59

	Exp -> scan_int "(" . ")"                           (rule 51)

	")"            shift, and enter state 90


State 60

	Stmt -> return Exp ";" .                            (rule 20)

	bool           reduce using rule 20
	int            reduce using rule 20
	if             reduce using rule 20
	for            reduce using rule 20
	return         reduce using rule 20
	else           reduce using rule 20
	print_int      reduce using rule 20
	id             reduce using rule 20
	"}"            reduce using rule 20
	while          reduce using rule 20


State 61

	Exp -> Exp "+" . Exp                                (rule 37)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 89

State 62

	Exp -> Exp "-" . Exp                                (rule 38)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 88

State 63

	Exp -> Exp "*" . Exp                                (rule 40)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 87

State 64

	Exp -> Exp "/" . Exp                                (rule 39)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 86

State 65

	Exp -> Exp "%" . Exp                                (rule 41)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 85

State 66

	Exp -> Exp "==" . Exp                               (rule 42)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 84

State 67

	Exp -> Exp "!=" . Exp                               (rule 47)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 83

State 68

	Exp -> Exp ">" . Exp                                (rule 43)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 82

State 69

	Exp -> Exp "<" . Exp                                (rule 44)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 81

State 70

	Exp -> Exp ">=" . Exp                               (rule 45)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 80

State 71

	Exp -> Exp "<=" . Exp                               (rule 46)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 79

State 72

	Exp -> Exp "&&" . Exp                               (rule 48)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 78

State 73

	Stmt -> print_int "(" Exp . ")" ";"                 (rule 21)
	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           shift, and enter state 66
	"!="           shift, and enter state 67
	">"            shift, and enter state 68
	"<"            shift, and enter state 69
	">="           shift, and enter state 70
	"<="           shift, and enter state 71
	")"            shift, and enter state 77
	"&&"           shift, and enter state 72


State 74

	Simple -> id "=" Exp .                              (rule 24)
	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	";"            reduce using rule 24
	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           shift, and enter state 66
	"!="           shift, and enter state 67
	">"            shift, and enter state 68
	"<"            shift, and enter state 69
	">="           shift, and enter state 70
	"<="           shift, and enter state 71
	")"            reduce using rule 24
	"&&"           shift, and enter state 72


State 75

	Stmt -> while "(" Exp . ")" Stmt                    (rule 16)
	Stmt -> while "(" Exp . ")" "{" Stmts "}"           (rule 17)
	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           shift, and enter state 66
	"!="           shift, and enter state 67
	">"            shift, and enter state 68
	"<"            shift, and enter state 69
	">="           shift, and enter state 70
	"<="           shift, and enter state 71
	")"            shift, and enter state 76
	"&&"           shift, and enter state 72


State 76

	Stmt -> while "(" Exp ")" . Stmt                    (rule 16)
	Stmt -> while "(" Exp ")" . "{" Stmts "}"           (rule 17)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	if             shift, and enter state 23
	for            shift, and enter state 24
	return         shift, and enter state 25
	print_int      shift, and enter state 26
	id             shift, and enter state 27
	"{"            shift, and enter state 103
	while          shift, and enter state 29

	Stmt           goto state 102
	Simple         goto state 21
	Type           goto state 22

State 77

	Stmt -> print_int "(" Exp ")" . ";"                 (rule 21)

	";"            shift, and enter state 101


State 78

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)
	Exp -> Exp "&&" Exp .                               (rule 48)

	","            reduce using rule 48
	";"            reduce using rule 48
	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           shift, and enter state 66
	"!="           shift, and enter state 67
	">"            shift, and enter state 68
	"<"            shift, and enter state 69
	">="           shift, and enter state 70
	"<="           shift, and enter state 71
	")"            reduce using rule 48
	"&&"           reduce using rule 48


State 79

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp "<=" Exp .                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	","            reduce using rule 46
	";"            reduce using rule 46
	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           reduce using rule 46
	"!="           reduce using rule 46
	">"            reduce using rule 46
	"<"            reduce using rule 46
	">="           reduce using rule 46
	"<="           reduce using rule 46
	")"            reduce using rule 46
	"&&"           reduce using rule 46


State 80

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp ">=" Exp .                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	","            reduce using rule 45
	";"            reduce using rule 45
	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           reduce using rule 45
	"!="           reduce using rule 45
	">"            reduce using rule 45
	"<"            reduce using rule 45
	">="           reduce using rule 45
	"<="           reduce using rule 45
	")"            reduce using rule 45
	"&&"           reduce using rule 45


State 81

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp "<" Exp .                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	","            reduce using rule 44
	";"            reduce using rule 44
	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           reduce using rule 44
	"!="           reduce using rule 44
	">"            reduce using rule 44
	"<"            reduce using rule 44
	">="           reduce using rule 44
	"<="           reduce using rule 44
	")"            reduce using rule 44
	"&&"           reduce using rule 44


State 82

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp ">" Exp .                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	","            reduce using rule 43
	";"            reduce using rule 43
	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           reduce using rule 43
	"!="           reduce using rule 43
	">"            reduce using rule 43
	"<"            reduce using rule 43
	">="           reduce using rule 43
	"<="           reduce using rule 43
	")"            reduce using rule 43
	"&&"           reduce using rule 43


State 83

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp "!=" Exp .                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	","            reduce using rule 47
	";"            reduce using rule 47
	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           reduce using rule 47
	"!="           reduce using rule 47
	">"            shift, and enter state 68
	"<"            shift, and enter state 69
	">="           shift, and enter state 70
	"<="           shift, and enter state 71
	")"            reduce using rule 47
	"&&"           reduce using rule 47


State 84

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp "==" Exp .                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	","            reduce using rule 42
	";"            reduce using rule 42
	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           reduce using rule 42
	"!="           reduce using rule 42
	">"            shift, and enter state 68
	"<"            shift, and enter state 69
	">="           shift, and enter state 70
	"<="           shift, and enter state 71
	")"            reduce using rule 42
	"&&"           reduce using rule 42


State 85

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp "%" Exp .                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	","            reduce using rule 41
	";"            reduce using rule 41
	"+"            reduce using rule 41
	"-"            reduce using rule 41
	"*"            reduce using rule 41
	"/"            reduce using rule 41
	"%"            reduce using rule 41
	"=="           reduce using rule 41
	"!="           reduce using rule 41
	">"            reduce using rule 41
	"<"            reduce using rule 41
	">="           reduce using rule 41
	"<="           reduce using rule 41
	")"            reduce using rule 41
	"&&"           reduce using rule 41


State 86

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp "/" Exp .                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	","            reduce using rule 39
	";"            reduce using rule 39
	"+"            reduce using rule 39
	"-"            reduce using rule 39
	"*"            reduce using rule 39
	"/"            reduce using rule 39
	"%"            reduce using rule 39
	"=="           reduce using rule 39
	"!="           reduce using rule 39
	">"            reduce using rule 39
	"<"            reduce using rule 39
	">="           reduce using rule 39
	"<="           reduce using rule 39
	")"            reduce using rule 39
	"&&"           reduce using rule 39


State 87

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp "*" Exp .                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	","            reduce using rule 40
	";"            reduce using rule 40
	"+"            reduce using rule 40
	"-"            reduce using rule 40
	"*"            reduce using rule 40
	"/"            reduce using rule 40
	"%"            reduce using rule 40
	"=="           reduce using rule 40
	"!="           reduce using rule 40
	">"            reduce using rule 40
	"<"            reduce using rule 40
	">="           reduce using rule 40
	"<="           reduce using rule 40
	")"            reduce using rule 40
	"&&"           reduce using rule 40


State 88

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp "-" Exp .                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	","            reduce using rule 38
	";"            reduce using rule 38
	"+"            reduce using rule 38
	"-"            reduce using rule 38
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           reduce using rule 38
	"!="           reduce using rule 38
	">"            reduce using rule 38
	"<"            reduce using rule 38
	">="           reduce using rule 38
	"<="           reduce using rule 38
	")"            reduce using rule 38
	"&&"           reduce using rule 38


State 89

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp "+" Exp .                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	","            reduce using rule 37
	";"            reduce using rule 37
	"+"            reduce using rule 37
	"-"            reduce using rule 37
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           reduce using rule 37
	"!="           reduce using rule 37
	">"            reduce using rule 37
	"<"            reduce using rule 37
	">="           reduce using rule 37
	"<="           reduce using rule 37
	")"            reduce using rule 37
	"&&"           reduce using rule 37


State 90

	Exp -> scan_int "(" ")" .                           (rule 51)

	","            reduce using rule 51
	";"            reduce using rule 51
	"+"            reduce using rule 51
	"-"            reduce using rule 51
	"*"            reduce using rule 51
	"/"            reduce using rule 51
	"%"            reduce using rule 51
	"=="           reduce using rule 51
	"!="           reduce using rule 51
	">"            reduce using rule 51
	"<"            reduce using rule 51
	">="           reduce using rule 51
	"<="           reduce using rule 51
	")"            reduce using rule 51
	"&&"           reduce using rule 51


State 91

	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)
	Exp -> id "(" Exp . ")"                             (rule 52)

	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           shift, and enter state 66
	"!="           shift, and enter state 67
	">"            shift, and enter state 68
	"<"            shift, and enter state 69
	">="           shift, and enter state 70
	"<="           shift, and enter state 71
	")"            shift, and enter state 100
	"&&"           shift, and enter state 72


State 92

	Stmt -> for "(" Simple ";" . Exp ";" Simple ")" Stmt    (rule 18)
	Stmt -> for "(" Simple ";" . Exp ";" Simple ")" "{" Stmts "}"    (rule 19)

	true           shift, and enter state 36
	false          shift, and enter state 37
	scan_int       shift, and enter state 38
	id             shift, and enter state 39
	num            shift, and enter state 40
	"!"            shift, and enter state 41

	Exp            goto state 99

State 93

	Stmt -> if "(" Exp ")" . Stmt else Stmt             (rule 10)
	Stmt -> if "(" Exp ")" . "{" Stmts "}" else Stmt    (rule 11)
	Stmt -> if "(" Exp ")" . Stmt else "{" Stmts "}"    (rule 12)
	Stmt -> if "(" Exp ")" . "{" Stmts "}" else "{" Stmts "}"    (rule 13)
	Stmt -> if "(" Exp ")" . Stmt                       (rule 14)
	Stmt -> if "(" Exp ")" . "{" Stmts "}"              (rule 15)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	if             shift, and enter state 23
	for            shift, and enter state 24
	return         shift, and enter state 25
	print_int      shift, and enter state 26
	id             shift, and enter state 27
	"{"            shift, and enter state 98
	while          shift, and enter state 29

	Stmt           goto state 97
	Simple         goto state 21
	Type           goto state 22

State 94

	Ids -> id "=" Exp .                                 (rule 30)
	Ids -> id "=" Exp . "," Ids                         (rule 31)
	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	","            shift, and enter state 96
	";"            reduce using rule 30
	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           shift, and enter state 66
	"!="           shift, and enter state 67
	">"            shift, and enter state 68
	"<"            shift, and enter state 69
	">="           shift, and enter state 70
	"<="           shift, and enter state 71
	")"            reduce using rule 30
	"&&"           shift, and enter state 72


State 95

	Ids -> id "," Ids .                                 (rule 29)

	";"            reduce using rule 29
	")"            reduce using rule 29


State 96

	Ids -> id "=" Exp "," . Ids                         (rule 31)

	id             shift, and enter state 45

	Ids            goto state 108

State 97

	Stmt -> if "(" Exp ")" Stmt . else Stmt             (rule 10)
	Stmt -> if "(" Exp ")" Stmt . else "{" Stmts "}"    (rule 12)
	Stmt -> if "(" Exp ")" Stmt .                       (rule 14)

	bool           reduce using rule 14
	int            reduce using rule 14
	if             reduce using rule 14
	for            reduce using rule 14
	return         reduce using rule 14
	else           shift, and enter state 107
	print_int      reduce using rule 14
	id             reduce using rule 14
	"}"            reduce using rule 14
	while          reduce using rule 14


State 98

	Stmt -> if "(" Exp ")" "{" . Stmts "}" else Stmt    (rule 11)
	Stmt -> if "(" Exp ")" "{" . Stmts "}" else "{" Stmts "}"    (rule 13)
	Stmt -> if "(" Exp ")" "{" . Stmts "}"              (rule 15)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	if             shift, and enter state 23
	for            shift, and enter state 24
	return         shift, and enter state 25
	print_int      shift, and enter state 26
	id             shift, and enter state 27
	while          shift, and enter state 29

	Stmt           goto state 19
	Stmts          goto state 106
	Simple         goto state 21
	Type           goto state 22

State 99

	Stmt -> for "(" Simple ";" Exp . ";" Simple ")" Stmt    (rule 18)
	Stmt -> for "(" Simple ";" Exp . ";" Simple ")" "{" Stmts "}"    (rule 19)
	Exp -> Exp . "+" Exp                                (rule 37)
	Exp -> Exp . "-" Exp                                (rule 38)
	Exp -> Exp . "/" Exp                                (rule 39)
	Exp -> Exp . "*" Exp                                (rule 40)
	Exp -> Exp . "%" Exp                                (rule 41)
	Exp -> Exp . "==" Exp                               (rule 42)
	Exp -> Exp . ">" Exp                                (rule 43)
	Exp -> Exp . "<" Exp                                (rule 44)
	Exp -> Exp . ">=" Exp                               (rule 45)
	Exp -> Exp . "<=" Exp                               (rule 46)
	Exp -> Exp . "!=" Exp                               (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 48)

	";"            shift, and enter state 105
	"+"            shift, and enter state 61
	"-"            shift, and enter state 62
	"*"            shift, and enter state 63
	"/"            shift, and enter state 64
	"%"            shift, and enter state 65
	"=="           shift, and enter state 66
	"!="           shift, and enter state 67
	">"            shift, and enter state 68
	"<"            shift, and enter state 69
	">="           shift, and enter state 70
	"<="           shift, and enter state 71
	"&&"           shift, and enter state 72


State 100

	Exp -> id "(" Exp ")" .                             (rule 52)

	","            reduce using rule 52
	";"            reduce using rule 52
	"+"            reduce using rule 52
	"-"            reduce using rule 52
	"*"            reduce using rule 52
	"/"            reduce using rule 52
	"%"            reduce using rule 52
	"=="           reduce using rule 52
	"!="           reduce using rule 52
	">"            reduce using rule 52
	"<"            reduce using rule 52
	">="           reduce using rule 52
	"<="           reduce using rule 52
	")"            reduce using rule 52
	"&&"           reduce using rule 52


State 101

	Stmt -> print_int "(" Exp ")" ";" .                 (rule 21)

	bool           reduce using rule 21
	int            reduce using rule 21
	if             reduce using rule 21
	for            reduce using rule 21
	return         reduce using rule 21
	else           reduce using rule 21
	print_int      reduce using rule 21
	id             reduce using rule 21
	"}"            reduce using rule 21
	while          reduce using rule 21


State 102

	Stmt -> while "(" Exp ")" Stmt .                    (rule 16)

	bool           reduce using rule 16
	int            reduce using rule 16
	if             reduce using rule 16
	for            reduce using rule 16
	return         reduce using rule 16
	else           reduce using rule 16
	print_int      reduce using rule 16
	id             reduce using rule 16
	"}"            reduce using rule 16
	while          reduce using rule 16


State 103

	Stmt -> while "(" Exp ")" "{" . Stmts "}"           (rule 17)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	if             shift, and enter state 23
	for            shift, and enter state 24
	return         shift, and enter state 25
	print_int      shift, and enter state 26
	id             shift, and enter state 27
	while          shift, and enter state 29

	Stmt           goto state 19
	Stmts          goto state 104
	Simple         goto state 21
	Type           goto state 22

State 104

	Stmt -> while "(" Exp ")" "{" Stmts . "}"           (rule 17)

	"}"            shift, and enter state 113


State 105

	Stmt -> for "(" Simple ";" Exp ";" . Simple ")" Stmt    (rule 18)
	Stmt -> for "(" Simple ";" Exp ";" . Simple ")" "{" Stmts "}"    (rule 19)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	id             shift, and enter state 27

	Simple         goto state 112
	Type           goto state 22

State 106

	Stmt -> if "(" Exp ")" "{" Stmts . "}" else Stmt    (rule 11)
	Stmt -> if "(" Exp ")" "{" Stmts . "}" else "{" Stmts "}"    (rule 13)
	Stmt -> if "(" Exp ")" "{" Stmts . "}"              (rule 15)

	"}"            shift, and enter state 111


State 107

	Stmt -> if "(" Exp ")" Stmt else . Stmt             (rule 10)
	Stmt -> if "(" Exp ")" Stmt else . "{" Stmts "}"    (rule 12)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	if             shift, and enter state 23
	for            shift, and enter state 24
	return         shift, and enter state 25
	print_int      shift, and enter state 26
	id             shift, and enter state 27
	"{"            shift, and enter state 110
	while          shift, and enter state 29

	Stmt           goto state 109
	Simple         goto state 21
	Type           goto state 22

State 108

	Ids -> id "=" Exp "," Ids .                         (rule 31)

	";"            reduce using rule 31
	")"            reduce using rule 31


State 109

	Stmt -> if "(" Exp ")" Stmt else Stmt .             (rule 10)

	bool           reduce using rule 10
	int            reduce using rule 10
	if             reduce using rule 10
	for            reduce using rule 10
	return         reduce using rule 10
	else           reduce using rule 10
	print_int      reduce using rule 10
	id             reduce using rule 10
	"}"            reduce using rule 10
	while          reduce using rule 10


State 110

	Stmt -> if "(" Exp ")" Stmt else "{" . Stmts "}"    (rule 12)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	if             shift, and enter state 23
	for            shift, and enter state 24
	return         shift, and enter state 25
	print_int      shift, and enter state 26
	id             shift, and enter state 27
	while          shift, and enter state 29

	Stmt           goto state 19
	Stmts          goto state 116
	Simple         goto state 21
	Type           goto state 22

State 111

	Stmt -> if "(" Exp ")" "{" Stmts "}" . else Stmt    (rule 11)
	Stmt -> if "(" Exp ")" "{" Stmts "}" . else "{" Stmts "}"    (rule 13)
	Stmt -> if "(" Exp ")" "{" Stmts "}" .              (rule 15)

	bool           reduce using rule 15
	int            reduce using rule 15
	if             reduce using rule 15
	for            reduce using rule 15
	return         reduce using rule 15
	else           shift, and enter state 115
	print_int      reduce using rule 15
	id             reduce using rule 15
	"}"            reduce using rule 15
	while          reduce using rule 15


State 112

	Stmt -> for "(" Simple ";" Exp ";" Simple . ")" Stmt    (rule 18)
	Stmt -> for "(" Simple ";" Exp ";" Simple . ")" "{" Stmts "}"    (rule 19)

	")"            shift, and enter state 114


State 113

	Stmt -> while "(" Exp ")" "{" Stmts "}" .           (rule 17)

	bool           reduce using rule 17
	int            reduce using rule 17
	if             reduce using rule 17
	for            reduce using rule 17
	return         reduce using rule 17
	else           reduce using rule 17
	print_int      reduce using rule 17
	id             reduce using rule 17
	"}"            reduce using rule 17
	while          reduce using rule 17


State 114

	Stmt -> for "(" Simple ";" Exp ";" Simple ")" . Stmt    (rule 18)
	Stmt -> for "(" Simple ";" Exp ";" Simple ")" . "{" Stmts "}"    (rule 19)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	if             shift, and enter state 23
	for            shift, and enter state 24
	return         shift, and enter state 25
	print_int      shift, and enter state 26
	id             shift, and enter state 27
	"{"            shift, and enter state 121
	while          shift, and enter state 29

	Stmt           goto state 120
	Simple         goto state 21
	Type           goto state 22

State 115

	Stmt -> if "(" Exp ")" "{" Stmts "}" else . Stmt    (rule 11)
	Stmt -> if "(" Exp ")" "{" Stmts "}" else . "{" Stmts "}"    (rule 13)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	if             shift, and enter state 23
	for            shift, and enter state 24
	return         shift, and enter state 25
	print_int      shift, and enter state 26
	id             shift, and enter state 27
	"{"            shift, and enter state 119
	while          shift, and enter state 29

	Stmt           goto state 118
	Simple         goto state 21
	Type           goto state 22

State 116

	Stmt -> if "(" Exp ")" Stmt else "{" Stmts . "}"    (rule 12)

	"}"            shift, and enter state 117


State 117

	Stmt -> if "(" Exp ")" Stmt else "{" Stmts "}" .    (rule 12)

	bool           reduce using rule 12
	int            reduce using rule 12
	if             reduce using rule 12
	for            reduce using rule 12
	return         reduce using rule 12
	else           reduce using rule 12
	print_int      reduce using rule 12
	id             reduce using rule 12
	"}"            reduce using rule 12
	while          reduce using rule 12


State 118

	Stmt -> if "(" Exp ")" "{" Stmts "}" else Stmt .    (rule 11)

	bool           reduce using rule 11
	int            reduce using rule 11
	if             reduce using rule 11
	for            reduce using rule 11
	return         reduce using rule 11
	else           reduce using rule 11
	print_int      reduce using rule 11
	id             reduce using rule 11
	"}"            reduce using rule 11
	while          reduce using rule 11


State 119

	Stmt -> if "(" Exp ")" "{" Stmts "}" else "{" . Stmts "}"    (rule 13)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	if             shift, and enter state 23
	for            shift, and enter state 24
	return         shift, and enter state 25
	print_int      shift, and enter state 26
	id             shift, and enter state 27
	while          shift, and enter state 29

	Stmt           goto state 19
	Stmts          goto state 123
	Simple         goto state 21
	Type           goto state 22

State 120

	Stmt -> for "(" Simple ";" Exp ";" Simple ")" Stmt .    (rule 18)

	bool           reduce using rule 18
	int            reduce using rule 18
	if             reduce using rule 18
	for            reduce using rule 18
	return         reduce using rule 18
	else           reduce using rule 18
	print_int      reduce using rule 18
	id             reduce using rule 18
	"}"            reduce using rule 18
	while          reduce using rule 18


State 121

	Stmt -> for "(" Simple ";" Exp ";" Simple ")" "{" . Stmts "}"    (rule 19)

	bool           shift, and enter state 4
	int            shift, and enter state 5
	if             shift, and enter state 23
	for            shift, and enter state 24
	return         shift, and enter state 25
	print_int      shift, and enter state 26
	id             shift, and enter state 27
	while          shift, and enter state 29

	Stmt           goto state 19
	Stmts          goto state 122
	Simple         goto state 21
	Type           goto state 22

State 122

	Stmt -> for "(" Simple ";" Exp ";" Simple ")" "{" Stmts . "}"    (rule 19)

	"}"            shift, and enter state 125


State 123

	Stmt -> if "(" Exp ")" "{" Stmts "}" else "{" Stmts . "}"    (rule 13)

	"}"            shift, and enter state 124


State 124

	Stmt -> if "(" Exp ")" "{" Stmts "}" else "{" Stmts "}" .    (rule 13)

	bool           reduce using rule 13
	int            reduce using rule 13
	if             reduce using rule 13
	for            reduce using rule 13
	return         reduce using rule 13
	else           reduce using rule 13
	print_int      reduce using rule 13
	id             reduce using rule 13
	"}"            reduce using rule 13
	while          reduce using rule 13


State 125

	Stmt -> for "(" Simple ";" Exp ";" Simple ")" "{" Stmts "}" .    (rule 19)

	bool           reduce using rule 19
	int            reduce using rule 19
	if             reduce using rule 19
	for            reduce using rule 19
	return         reduce using rule 19
	else           reduce using rule 19
	print_int      reduce using rule 19
	id             reduce using rule 19
	"}"            reduce using rule 19
	while          reduce using rule 19


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 53
Number of terminals: 35
Number of non-terminals: 10
Number of states: 126
